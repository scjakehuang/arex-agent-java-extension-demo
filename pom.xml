<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ly.arsenal</groupId>
    <artifactId>plugin-tcconfigcenter</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <properties>
        <java.version>1.8</java.version>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <!-- 请将此版本替换为 arex-agent-java 本地仓库的最新版本 -->
        <arex.version>0.4.6</arex.version>

        <version.junit-jupiter>5.8.2</version.junit-jupiter>
        <mockito-junit-jupiter.version>4.7.0</mockito-junit-jupiter.version>
    </properties>

    <dependencies>
	<!-- 插件项目依赖的arex-agent-java工程，确保arex-agent-java已经install到你本地的仓库，这样才能访问到 -->
        <dependency>
            <groupId>io.arex</groupId>
            <artifactId>arex-instrumentation-api</artifactId>
            <version>${arex.version}</version>
        </dependency>
        <!-- 此处仅为演示使用，实际开发中替换成你们公司需要mock的组件即可 -->
        <dependency>
            <groupId>com.ly.tcbase</groupId>
            <artifactId>configcenterclient</artifactId>
            <version>6.2.8</version>
            <scope>provided</scope>
        </dependency>



        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${version.junit-jupiter}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${version.junit-jupiter}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${version.junit-jupiter}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito-junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>${mockito-junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
	    <!-- arex-agent修饰代码需要shade插件里的bytebuddy，不要去掉 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <relocations>
                                <relocation>
                                    <pattern>net.bytebuddy</pattern>
                                    <shadedPattern>shaded.net.bytebuddy</shadedPattern>
                                </relocation>
                            </relocations>
                            <transformers>
                                <transformers implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <artifactSet>
                        <includes>
                            <!--只需要将扩展的插件打入到Jar包即可，格式为：{groupId}:{artifactId}-->
                            <include>com.ly.arsenal:plugin-tcconfigcenter</include>
                        </includes>
                    </artifactSet>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
